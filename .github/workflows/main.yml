name: Python Docker Push
on: 
  push: 
    branches: [ "master" ]
env:
  AWS_REGION: us-east-1                   
  ECR_REPOSITORY: project-1
  ECS_SERVICE: PythonApplication-service              
  ECS_CLUSTER: cluster-v2              
  ECS_TASK_DEFINITION: Docker-Image-Configuration-Task-1-revision1.json
  CONTAINER_NAME: python-app-container
  
jobs:
  python-Test: 
    name: Build Docker Image
    runs-on: ubuntu-latest  
    steps:  
        - name: Checkout
          uses: actions/checkout@v2    
          
        - name: Setup AWS ECR Details
          uses: aws-actions/configure-aws-credentials@v1
          with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_REGION}}


        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          

        - name: Build and push the tagged docker image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
            IMAGE_TAG: ${{ github.run_number }}
          run: |
            docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REPOSITORY:$IMAGE_TAG"
            
        # - name: Download task definition
        #   id: image
        #   run: |
        #     aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} --query taskDefinition > Docker-Image-Configuration-Task-1-revision1.json
        #   shell: /usr/bin/bash -e {0}

        - name: Fill in the new image ID in ECS Task Definition
          id: task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
              task-definition: ${{ env.ECS_TASK_DEFINITION }}
              container-name: ${{ env.CONTAINER_NAME }}
              image: ${{ steps.build-image.outputs.image }}
        - name: Deploy ECS Task Definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
              task-definition: ${{ steps.task-def.outputs.task-definition }}
              service: ${{ env.ECS_SERVICE }}
              cluster: ${{ env.ECS_CLUSTER }}
              wait-for-service-stability: true
